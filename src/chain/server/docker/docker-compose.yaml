services:

  minio:
    image: quay.io/minio/minio
    container_name: minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ${FILE_PATH}/minio/data:/data
    networks:
      - chain

  mariadb:
    image: mariadb:11
    container_name: mariadb
    restart: unless-stopped
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
    ports:
      - "3306:3306"
    volumes:
      - ${FILE_PATH}/mariadb/data:/var/lib/mysql
    networks:
      - chain

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mariadb
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      APACHE_PORT: 8888
    ports:
      - "8888:8888"
    depends_on:
      - mariadb
    networks:
      - chain

  # project rootがビルドのルートになる
  # 配下のDockerfileもそう
  chain:
    container_name: chain
    restart: unless-stopped
    build:
      context: ../../
      dockerfile: ./server/docker/chain/dockerfile
    ports:
      - "8180:8180"
      - "8050:8050"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      CHAIN_URI: ${CHAIN_URI}
      STORE_URI: ${STORE_URI}
      SECRET_KEY: ${SECRET_KEY}
      S3_ENDPOINT_URL: ${S3_ENDPOINT_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    networks:
      - chain
    # depends_on:
    #   - mariadb
    #   - minio

networks:
  chain:
    name: chain
